// Copyright 0000 The Fuchsia Authors.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// NOTE: The only purpose of the above copyright notice is to satisfy fidl-lint
// (which would otherwise trigger a build error). Actual copyright is:
//
// Copyright 2021 Fabio D'Urso. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.stardock;

// Reference: https://github.com/moby/moby/issues/10392
const MAX_NAME_LENGTH uint64 = 255;

// Reference: https://docs.docker.com/engine/reference/commandline/tag/
const MAX_TAG_LENGTH uint64 = 128;

/// SHA256 hex digest. It is used to identify images, blobs and containers.
///
/// It can only contain numbers ('0' to '9') and lower-case 'a' to 'f' letters.
///
/// Sha256Digest values always contain exactly 64 characters (64 hex chars
/// correspond to 32 bytes or 256 bits). This type is used to convey unambiguous
/// computer-generated hashes.
///
/// Abbreviated digests (with less than 64 characters) might also be used in
/// image references. They are usually strings typed by the user, and the
/// recepient must inspect its registry to find if they unambiguously match the
/// first characters of exactly one full Sha256Digest.
alias Sha256Digest = string:64;

/// Image reference, to look up an image in a registry.
///
/// The cases of this enum closely match the syntax of the corresponding
/// command-line argument.
type ImageReference = strict union {
    /// Format: "NAME:TAG"
    1: by_name_and_tag struct {
        name string:MAX_NAME_LENGTH;
        tag string:MAX_TAG_LENGTH;
    };

    /// Format "NAME@sha256:DIGEST" or "NAME:TAG@sha256:DIGEST"
    ///
    /// DIGEST refers to the digest of the manifest. The TAG is always ignored.
    2: by_name_and_digest struct {
        name string:MAX_NAME_LENGTH;
        digest Sha256Digest;
    };

    /// Formats: "NAME", "ABBREVIATED_DIGEST" or "sha256:ABBREVIATED_DIGEST".
    ///
    /// ABBREVIATED_DIGEST refers to the digest of the image.
    ///
    /// NOTE: Some strings (such as "1234") are inherently ambiguous with
    /// respect to whether they refer to a NAME or an ABBREVIATED_DIGEST.
    3: by_name_or_image_id struct {
        text string:MAX_NAME_LENGTH;
        search_domain ImageReferenceAmbiguityType;
    };
};

type ImageReferenceAmbiguityType = strict enum {
    NAME_ONLY = 1;
    IMAGE_ID_ONLY = 2;
    NAME_OR_IMAGE_ID = 3;
};

/// Root interface of the stardock_manager component.
@discoverable
protocol Manager {
    Hello(struct {
        text string:128;
    }) -> (struct {
        text string:128;
    });
};
